{"number":1050,"state":"open","title":"Link Plugin v1.2.0 concurrency issues","body":"While making the [LinkAPI](https://github.com/zsawyer/mumble-LinkAPI) I stumbled upon a possible concurrency issue. After reviewing the code of the link-plugin to see how this is handled there I had to see that it is not being handled at all. \r\n\r\nSince the shared memory is freely available for read and write (as far as the OS permits) it is possible that - due to the frequent (per frame) updates - data might have changed during the consecutive reading of members in the struct. \r\n\r\nI am imagining a call chain of lm-\u003exxx where the first call will get a result for dwcount 1 and the following lm-\u003eyyy will get the result for dwcount 2 - since there was an update in between. \r\n\r\nWhile this may actually be insignificant and possibly negligible it constitutes unexpected behavior. As one would expect all data collected \"at the same time\" (i.e. the [function fetch](https://github.com/mumble-voip/mumble/blob/master/plugins/link/link.cpp#L107) ) to be related to the same frame/dwcount, which is currently not guaranteed. \r\n\r\nThe way to fix this imho is to use a semaphore. It might be best to use what ever the OS provides regarding semaphores or use dwcount to match data. So simply if there is a dwcount mismatch from before the first and after the last read then the whole data-group is invalid. \n\n\n*This ticket has been migrated from sourceforge. It is thus missing some details like original creator etc.\nThe original is at https://sourceforge.net/p/mumble/bugs/1050/ .*","user":{"email":"zsawyer@users.sourceforge.net"},"labels":[{"name":"Positional Plugins"},{"name":"positional audio"}],"created_at":"2013-10-22T01:19:56.621Z","updated_at":"2013-10-26T05:39:45.56Z"}
